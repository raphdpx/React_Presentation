// tslint:disable
// eslint-disable
/**
 * PaulExpress API v1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
/**
 *
 * @export
 * @interface DogDto
 */
export interface DogDto {
  /**
   *
   * @type {number}
   * @memberof DogDto
   */
  dogId?: number;
  /**
   *
   * @type {string}
   * @memberof DogDto
   */
  firstName?: string | null;
  /**
   *
   * @type {string}
   * @memberof DogDto
   */
  lastName?: string | null;
  /**
   *
   * @type {Date}
   * @memberof DogDto
   */
  dateOfBirth?: Date;
  /**
   *
   * @type {number}
   * @memberof DogDto
   */
  colorId?: number | null;
  /**
   *
   * @type {number}
   * @memberof DogDto
   */
  raceId?: number | null;
  /**
   *
   * @type {boolean}
   * @memberof DogDto
   */
  castrated?: boolean;
  /**
   *
   * @type {Date}
   * @memberof DogDto
   */
  createdOn?: Date;
  /**
   *
   * @type {string}
   * @memberof DogDto
   */
  createdBy?: string | null;
  /**
   *
   * @type {Date}
   * @memberof DogDto
   */
  updatedOn?: Date;
  /**
   *
   * @type {string}
   * @memberof DogDto
   */
  updatedBy?: string | null;
}

export function DogDtoFromJSON(json: any): DogDto {
  return DogDtoFromJSONTyped(json, false);
}

export function DogDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): DogDto {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    dogId: !exists(json, "dogId") ? undefined : json["dogId"],
    firstName: !exists(json, "firstName") ? undefined : json["firstName"],
    lastName: !exists(json, "lastName") ? undefined : json["lastName"],
    dateOfBirth: !exists(json, "dateOfBirth") ? undefined : new Date(json["dateOfBirth"]),
    colorId: !exists(json, "colorId") ? undefined : json["colorId"],
    raceId: !exists(json, "raceId") ? undefined : json["raceId"],
    castrated: !exists(json, "castrated") ? undefined : json["castrated"],
    createdOn: !exists(json, "createdOn") ? undefined : new Date(json["createdOn"]),
    createdBy: !exists(json, "createdBy") ? undefined : json["createdBy"],
    updatedOn: !exists(json, "updatedOn") ? undefined : new Date(json["updatedOn"]),
    updatedBy: !exists(json, "updatedBy") ? undefined : json["updatedBy"]
  };
}

export function DogDtoToJSON(value?: DogDto | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    dogId: value.dogId,
    firstName: value.firstName,
    lastName: value.lastName,
    dateOfBirth: value.dateOfBirth === undefined ? undefined : value.dateOfBirth.toISOString(),
    colorId: value.colorId,
    raceId: value.raceId,
    castrated: value.castrated,
    createdOn: value.createdOn === undefined ? undefined : value.createdOn.toISOString(),
    createdBy: value.createdBy,
    updatedOn: value.updatedOn === undefined ? undefined : value.updatedOn.toISOString(),
    updatedBy: value.updatedBy
  };
}
