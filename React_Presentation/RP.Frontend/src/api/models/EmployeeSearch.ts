// tslint:disable
// eslint-disable
/**
 * PaulExpress API v1.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import {
  BooleanSearch,
  BooleanSearchFromJSON,
  BooleanSearchFromJSONTyped,
  BooleanSearchToJSON,
  Int32ListSearch,
  Int32ListSearchFromJSON,
  Int32ListSearchFromJSONTyped,
  Int32ListSearchToJSON,
  TextSearch,
  TextSearchFromJSON,
  TextSearchFromJSONTyped,
  TextSearchToJSON
} from "./";

/**
 *
 * @export
 * @interface EmployeeSearch
 */
export interface EmployeeSearch {
  /**
   *
   * @type {string}
   * @memberof EmployeeSearch
   */
  filter?: string | null;
  /**
   *
   * @type {TextSearch}
   * @memberof EmployeeSearch
   */
  firstName?: TextSearch;
  /**
   *
   * @type {TextSearch}
   * @memberof EmployeeSearch
   */
  lastName?: TextSearch;
  /**
   *
   * @type {TextSearch}
   * @memberof EmployeeSearch
   */
  phoneNumber?: TextSearch;
  /**
   *
   * @type {TextSearch}
   * @memberof EmployeeSearch
   */
  email?: TextSearch;
  /**
   *
   * @type {BooleanSearch}
   * @memberof EmployeeSearch
   */
  active?: BooleanSearch;
  /**
   *
   * @type {Int32ListSearch}
   * @memberof EmployeeSearch
   */
  companyId?: Int32ListSearch;
  /**
   *
   * @type {number}
   * @memberof EmployeeSearch
   */
  pageNumber?: number;
  /**
   *
   * @type {number}
   * @memberof EmployeeSearch
   */
  pageSize?: number;
  /**
   *
   * @type {Array<string>}
   * @memberof EmployeeSearch
   */
  sortKey?: Array<string> | null;
  /**
   *
   * @type {number}
   * @memberof EmployeeSearch
   */
  readonly skipCount?: number;
  /**
   *
   * @type {number}
   * @memberof EmployeeSearch
   */
  forceSkip?: number | null;
  /**
   *
   * @type {number}
   * @memberof EmployeeSearch
   */
  forceTake?: number | null;
}

export function EmployeeSearchFromJSON(json: any): EmployeeSearch {
  return EmployeeSearchFromJSONTyped(json, false);
}

export function EmployeeSearchFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmployeeSearch {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    filter: !exists(json, "filter") ? undefined : json["filter"],
    firstName: !exists(json, "firstName") ? undefined : TextSearchFromJSON(json["firstName"]),
    lastName: !exists(json, "lastName") ? undefined : TextSearchFromJSON(json["lastName"]),
    phoneNumber: !exists(json, "phoneNumber") ? undefined : TextSearchFromJSON(json["phoneNumber"]),
    email: !exists(json, "email") ? undefined : TextSearchFromJSON(json["email"]),
    active: !exists(json, "active") ? undefined : BooleanSearchFromJSON(json["active"]),
    companyId: !exists(json, "companyId") ? undefined : Int32ListSearchFromJSON(json["companyId"]),
    pageNumber: !exists(json, "pageNumber") ? undefined : json["pageNumber"],
    pageSize: !exists(json, "pageSize") ? undefined : json["pageSize"],
    sortKey: !exists(json, "sortKey") ? undefined : json["sortKey"],
    skipCount: !exists(json, "skipCount") ? undefined : json["skipCount"],
    forceSkip: !exists(json, "forceSkip") ? undefined : json["forceSkip"],
    forceTake: !exists(json, "forceTake") ? undefined : json["forceTake"]
  };
}

export function EmployeeSearchToJSON(value?: EmployeeSearch | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    filter: value.filter,
    firstName: TextSearchToJSON(value.firstName),
    lastName: TextSearchToJSON(value.lastName),
    phoneNumber: TextSearchToJSON(value.phoneNumber),
    email: TextSearchToJSON(value.email),
    active: BooleanSearchToJSON(value.active),
    companyId: Int32ListSearchToJSON(value.companyId),
    pageNumber: value.pageNumber,
    pageSize: value.pageSize,
    sortKey: value.sortKey,
    forceSkip: value.forceSkip,
    forceTake: value.forceTake
  };
}
